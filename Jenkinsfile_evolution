
                        pipeline {
                            agent any
                            stages {
                                stage('Checkout') {
                                    steps {
                                        checkout scm
                                    }
                                }

                                stage('Build') {
                                    steps {
                                        script {
                                            // Check if any changes in the repository
                                            def changedFiles = sh(script: 'git diff --name-only HEAD^ HEAD', returnStdout: true).trim()

                                            if (changedFiles == 'Jenkinsfile_evolution') {
                                                echo 'Changes detected in Jenkinsfile_evolution. Building the Evolution-Insurance-Company job.'
                                                // Add build steps for the AtoZ-Insurance-Company job
                                                echo 'Before overwrite:'
                                                sh 'cat Config/Configuration.json'
                                                // Overwrite the configuration file
                                                writeFile file: 'Config/Configuration.json', text: '''
                                                {
                                                    "data": {
                                                        "insuranceCarrier":"Evolution-Insurance-Company",
                                                        "serverAddress": "http://45.79.5.228:8080",
                                                        "Xoriginator": "http://45.79.5.228:8080/evolution",
                                                        "apiurl": "/ArtigemRS-FI/api/",
                                                        "AdminApiurl": "/ArtigemRS-FI_Admin/api/",
                                                        "receipturl": "/",
                                                        "ExportUrl": "",
                                                        "ClaimTemplate": "/ArtigemRS-FI/artigem/templates/ClaimDetails.xlsx",
                                                        "ItemTemplate": "/ArtigemRS-FI/artigem/templates/postloss_Items.xlsx",
                                                        "VendorDetailsTemplate": "/ArtigemRS-FI/artigem/templates/VendorCatalogUpload.xlsx",
                                                        "UserDetailsTemplate": "/ArtigemRS-FI/artigem/templates/UserDetails.xlsx",
                                                        "bestbuyUrl":"https://api.bestbuy.com/v1/products",
                                                        "claimProfile": "Contents",
                                                        "serviceRequests" : "true",
                                                        "jewelryVendor": "ARTGM",
                                                        "speedCheckVendor": "ARTGM",
                                                        "hideCaptcha":"true",
                                                        "SpeedCheckApiurl": "http://45.79.5.228:8080/SpeedCheck_App/api/",
                                                        "gemGuideApi":"false",
                                                        "googleShoppingDropdown":"true",
                                                        "ThirdPartyAdjusting" : "false",
                                                        "loginWithSSO":"false"
                                                    }
                                                }
                                                '''
                                            } else {
                                                echo 'Changes detected in the repository. Building all jobs.'
                                                // Add build steps for all jobs
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    
